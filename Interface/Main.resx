<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 28</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="consoleToolStripMenuItem.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAAK/INwWK6QAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAJhSURBVDhPpZPdS9NRHMbPf9HtFBU3nFOn82W6dzfJ
        sci5zW2OGJk0xJfaMitRkFaRgpSnKLJMelHTiY3UnKTVCuxKZlAXhT+MXijwIqkuvOhp58CBIiGhi+fy
        c56XL4cA+C+RG7fuXV1cTm4vP1vB0tMVJB4/x2ziCe7PPcJkfAF3pmYxMjaDKzcncfHaXfRfGkV0cBjd
        Z+l2S7injaThny/37cW72B6YZnR49Wbjn3r9dgOfvmyi7VT/EFlOvsDXxYf48Z7iwYc4Pn7e3JW2vn1H
        6PgZSljkwsJCFBUVQa1Wo7i4GCUlJdBoNCgtLUV5eTm0Wi0qKytRVVUFvV4Po9EIs9mMpo5eShaWkhyS
        yWTIyMhAZmYmsrKykJ2djZycHOTm5kKhUCAvLw9KpRIqlYobWq1WhHsHKWGDiQdWV1cxPj6+6wfSG1AS
        n1/iMQWwvr6OSCSyI8Rqioq1tbU43BmlZCqe4N3kcjlSqRRisRjy8/P/gsQmZWVlqKiogMPhwMH2HkrG
        pudgMpk4UFBQwCExJoOYBMTGZGZMdXV1ONDSRcnoRBw2m+0PSKwvIHYBnU7HL2AwGPgVXC4X/M1hSoZv
        T/M+zEVAv59MnI2lZLJYLKiurobH44E72EbJ5ZEJ3kdEE04CYvcWEFueqaamBj6fD85AiJLzQ9e3WB+n
        04n6+noeze12cwemhoYGeL1eDvj9fjQ2NnIFAgHY3cEB0t7V194dvbDWHR2SOvsGpaM9A1LriXNS6Nhp
        6VBHrxRsPSkFQp2Sr+mIlI4spV2l/b5mye4KrlnsLsOOX3T3AvkFeEBB7djEuOkAAAAASUVORK5CYII=
</value>
  </data>
  <data name="dofusToolStripMenuItem.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>